/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.Files;
import controlador.GetFromURL;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

import org.json.simple.parser.ParseException;

import modelo.Card;
import java.awt.Color;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JMenuItem;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

/**
 *
 * @author Jorge
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }
    Files fl = new Files();
    GetFromURL fromURL = new GetFromURL();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        jLabelSpaName = new javax.swing.JLabel();
        jTextFldSpaName = new javax.swing.JTextField();
        jTextFldSpaName.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent e) {
        		jTextFldSpaName.setBackground(Color.white);
        	}
        });
        jLabelEngName = new javax.swing.JLabel();
        jTextFldEngName = new javax.swing.JTextField();
        jTextFldEngName.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent e) {
        		jTextFldEngName.setBackground(Color.white);;
        	}
        });
        jLabelAttrib = new javax.swing.JLabel();
        jComboBoxAttrib = new javax.swing.JComboBox<>();
        jLabelLevel = new javax.swing.JLabel();
        jComboBoxLvl = new javax.swing.JComboBox<>();
        jLabelType = new javax.swing.JLabel();
        jPanelTypes = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabelText = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextArea1.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent e) {
        		jTextArea1.setBackground(Color.white);;
        	}
        });
        jLabelATK = new javax.swing.JLabel();
        jTextFldATK = new javax.swing.JTextField();
        jLabelDEF = new javax.swing.JLabel();
        jTextFldDEF = new javax.swing.JTextField();
        jButtonAdd = new javax.swing.JButton();
        jButtonAdd.setEnabled(false);
        jButtonNew = new javax.swing.JButton();
        jButtonNew.setEnabled(false);
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonSave = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonDelete.setEnabled(false);
        jButton1 = new javax.swing.JButton();
        jButton1.setEnabled(false);
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabelSpaName.setText("Nombre (SPA):");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(jLabelSpaName, gridBagConstraints);

        jTextFldSpaName.setText("Spa name");
        jTextFldSpaName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFldSpaNameMouseClicked(evt);
            }
        });
        
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(jTextFldSpaName, gridBagConstraints);

        jLabelEngName.setText("Nombre (ENG):");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 28;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(jLabelEngName, gridBagConstraints);

        jTextFldEngName.setText("Eng name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.8;
        jPanel2.add(jTextFldEngName, gridBagConstraints);

        jLabelAttrib.setText("Atributo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(jLabelAttrib, gridBagConstraints);

        jComboBoxAttrib.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "","AGUA", "DIVINIDAD", "FUEGO", "LUZ", "OSCURIDAD", "TIERRA", 
        		"VIENTO", "MÁGICA", "TRAMPA" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jComboBoxAttrib.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAttribEvent(evt);
            }
        });
        jPanel2.add(jComboBoxAttrib, gridBagConstraints);

        jLabelLevel.setText("Nivel/LINK:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(jLabelLevel, gridBagConstraints);

        jComboBoxLvl.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "","1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(jComboBoxLvl, gridBagConstraints);

        jLabelType.setText("Tipo(s):");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(jLabelType, gridBagConstraints);

        jPanelTypes.setLayout(new javax.swing.BoxLayout(jPanelTypes, javax.swing.BoxLayout.LINE_AXIS));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "","Aqua", "Bestia", "Bestia Alada", "Ciberso", "Demonio", "Dinosaurio", 
        		"Dragón", "Guerrero", "Guerrero-Bestia", "Hada", "Insecto", "Lanzador de Conjuros", "Máquina", "Pez", "Planta", "Psíquico", "Piro", 
        		"Reptil", "Roca", "Serpiente Marina", "Trueno", "Wyrm", "Zombi" }));
        jPanelTypes.add(jComboBox1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE;
        jPanel2.add(jPanelTypes, gridBagConstraints);

        jLabelText.setText("Texto:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(jLabelText, gridBagConstraints);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setMinimumSize(new java.awt.Dimension(166, 96));

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(10);
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setMaximumSize(new java.awt.Dimension(200, 200));
        jTextArea1.setMinimumSize(new java.awt.Dimension(50, 50));
        jTextArea1.setName(""); // NOI18N
        jTextArea1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel2.add(jScrollPane1, gridBagConstraints);

        jLabelATK.setText("ATK:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(jLabelATK, gridBagConstraints);

        jTextFldATK.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(jTextFldATK, gridBagConstraints);

        jLabelDEF.setText("DEF:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(jLabelDEF, gridBagConstraints);

        jTextFldDEF.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(jTextFldDEF, gridBagConstraints);

        jButtonAdd.setText("Add");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonNew.setText("New");
        jButtonNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Cartas"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setShowVerticalLines(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jButtonSave.setText("Save");
        jButtonSave.setEnabled(false);
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonDelete.setBackground(new java.awt.Color(255, 102, 102));
        jButtonDelete.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonDelete.setText("X");
        jButtonDelete.setAlignmentY(0.0F);
        jButtonDelete.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButtonDelete.setBorderPainted(false);
        jButtonDelete.setContentAreaFilled(false);
        jButtonDelete.setOpaque(true);
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jMenu1.setText("Config");
        jMenu1.setActionCommand("Ruta");

        jMenuItem1.setText("Cargar Base");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        
        jMenuItemNew = new JMenuItem("New Base");
        jMenuItemNew.addActionListener(new ActionListener() {
        	public void actionPerformed(java.awt.event.ActionEvent evt) {
        		jMenuNewAction(evt);
        	}
        });
        jMenu1.add(jMenuItemNew);
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jButtonAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonSave)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonNew)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(21, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButtonNew)
                                .addComponent(jButtonAdd)
                                .addComponent(jButtonSave))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)))
                        .addGap(4, 4, 4)
                        .addComponent(jButton1))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jComboBoxAttribEvent(java.awt.event.ActionEvent evt) {
    	if (jComboBoxAttrib.getSelectedIndex()==8 || jComboBoxAttrib.getSelectedIndex()==9) {
    		jTextFldATK.setText("0");
			jTextFldDEF.setText("0");
			jTextFldATK.setEnabled(false);
			jTextFldDEF.setEditable(false);;
		} else {
			jTextFldATK.setEnabled(true);
			jTextFldDEF.setEditable(true);
		}
    }



    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
    	Object[] auxJObjects = {jTextFldEngName,jTextFldSpaName, jComboBoxAttrib, jComboBoxLvl, jComboBox1, jTextArea1, jTextFldATK, jTextFldDEF};
    	switch (jComboBoxAttrib.getSelectedItem().toString()) {
		case "MÁGICA":
			auxJObjects[3]=0;
			auxJObjects[4]=0;
			auxJObjects[6]=0;
			auxJObjects[7]=0;
			break;
		
		case "TRAMPA":
			auxJObjects[3]=0;
			auxJObjects[4]=0;
			auxJObjects[6]=0;
			auxJObjects[7]=0;
			break;

		default:
			break;
		}
    	
    	int aux = 0;
    	for (Object object : auxJObjects) {
			aux += fl.verificarCampo(object);
		}
    	if(aux == 0) {
    		 fl.addCard(jTextFldSpaName.getText(), jTextFldEngName.getText(), 
             jComboBoxAttrib.getSelectedItem().toString(), jComboBox1.getSelectedItem().toString(), 
             jTextArea1.getText(), Integer.parseInt((String)jComboBoxLvl.getSelectedItem()),
             Integer.parseInt(jTextFldATK.getText().toString()), Integer.parseInt(jTextFldDEF.getText().toString()));
    		 try {
				jTable1.setModel(fl.loadJsonToTable());
			} catch (NullPointerException | IOException | ParseException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
    	}else {
			JOptionPane.showMessageDialog(this, "Llene todos los campos");
		}
       
        
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
    	fl.loadChooser();
        try {
			jTable1.setModel(fl.loadJsonToTable());
			jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
	        this.setTitle(fl.getRuta());
	        this.jButtonAdd.setEnabled(true);
	        jButtonNew.setEnabled(true);
            jButton1.setEnabled(true);
		} catch (NullPointerException | IOException | ParseException e) {
			JOptionPane.showMessageDialog(rootPane, "LOL 2 error", "Error", JOptionPane.ERROR_MESSAGE);
			e.printStackTrace();
		}
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    
    private void jMenuNewAction(ActionEvent evt) {
    	fl.saveChooser();
		try {
			fl.loadJsonToTable();
			this.setTitle(fl.getRuta());
		} catch (NullPointerException | IOException | ParseException e1) {
			JOptionPane.showMessageDialog(rootPane, "LOL 1 error", "Error", JOptionPane.ERROR_MESSAGE);
			e1.printStackTrace();
		}
		this.setTitle(fl.getRuta());
    }

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            evt.consume();
            int row = jTable1.getSelectedRow();
            Card auxCarf = fl.getSelectedCard(row);
            jTextFldSpaName.setText(auxCarf.getSpaName());
            jTextFldEngName.setText(auxCarf.getEngName());
            jComboBoxAttrib.setSelectedItem(auxCarf.getAttribute());
            jComboBoxLvl.setSelectedItem(auxCarf.getLevel()+"");
            jComboBox1.setSelectedItem(auxCarf.getType());
            jTextArea1.setText(auxCarf.getText());
            jTextFldATK.setText(auxCarf.getAttak()+"");
            jTextFldDEF.setText(auxCarf.getDefense()+"");
            jButtonSave.setEnabled(true);
            jButtonAdd.setEnabled(false);
            jButtonDelete.setEnabled(true);
            jButton1.setEnabled(false);
        }
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewActionPerformed
        jTextFldSpaName.setText("");
        jTextFldEngName.setText("");
        jTextArea1.setText("");
        jTextFldATK.setText("");
        jTextFldDEF.setText("");
        jButtonSave.setEnabled(false);
        jButtonAdd.setEnabled(true);
        jButtonDelete.setEnabled(false);
        jButton1.setEnabled(true);
    }//GEN-LAST:event_jButtonNewActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        fl.deleteCrd(jTable1.getSelectedRow());
        try {
			jTable1.setModel(fl.loadJsonToTable());
		} catch (NullPointerException | IOException | ParseException e) {
			JOptionPane.showMessageDialog(rootPane, "LOL 3 error", "Error", JOptionPane.ERROR_MESSAGE);
			e.printStackTrace();
		}
        jButtonNewActionPerformed(evt);
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jTextArea1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea1MouseClicked

    }//GEN-LAST:event_jTextArea1MouseClicked

    private void jTextFldSpaNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFldSpaNameMouseClicked
    	Object[] auxJObjects = {jTextFldEngName};
    	int error = 0;
    	for (Object object : auxJObjects) {
			error += fl.verificarCampo(object);
		}
    	
        if (evt.getClickCount() == 3 && !evt.isConsumed()) {
            evt.consume();
            if (error==0) {
				try {
					jTextFldSpaName.setText(fromURL.getSpanishName(jTextFldEngName.getText()));
				} catch (IOException ex) {
					Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
					JOptionPane.showMessageDialog(rootPane, "La carta no existe, revise el nombre");
				}
			} else {
				JOptionPane.showMessageDialog(rootPane, "Campo vacio, no hay nombre de carta");
			jTextFldEngName.setBackground(Color.cyan);
			}
        }
    }//GEN-LAST:event_jTextFldSpaNameMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    	Object[] auxJObjects = {jTextFldSpaName};
    	int error = 0;
    	for (Object object : auxJObjects) {
			error += fl.verificarCampo(object);
		}
    	if (error == 0) {
    		try {
                ArrayList<Object> aux = fromURL.getAttrib(jTextFldSpaName.getText());
                
                jComboBoxAttrib.setSelectedItem(aux.get(3));
                jComboBoxLvl.setSelectedItem(aux.get(4).toString());
                jComboBox1.setSelectedItem(aux.get(5));
                jTextFldATK.setText(aux.get(6).toString());
                
					jTextFldDEF.setText(aux.get(7).toString());
				
                jTextArea1.setText(fromURL.textFromURL(jTextFldSpaName.getText()));
                
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "La carta no existe, revise el nombre");
            }
		} else {
			JOptionPane.showMessageDialog(rootPane, "Campo vacio, no hay nombre de carta");
			jTextFldSpaName.setBackground(Color.cyan);
		}
    	
    }//GEN-LAST:event_jButton1ActionPerformed

    
    /*t
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonNew;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBoxAttrib;
    private javax.swing.JComboBox<String> jComboBoxLvl;
    private javax.swing.JLabel jLabelATK;
    private javax.swing.JLabel jLabelAttrib;
    private javax.swing.JLabel jLabelDEF;
    private javax.swing.JLabel jLabelEngName;
    private javax.swing.JLabel jLabelLevel;
    private javax.swing.JLabel jLabelSpaName;
    private javax.swing.JLabel jLabelText;
    private javax.swing.JLabel jLabelType;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelTypes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextFldATK;
    private javax.swing.JTextField jTextFldDEF;
    private javax.swing.JTextField jTextFldEngName;
    private javax.swing.JTextField jTextFldSpaName;
    private JMenuItem jMenuItemNew;
    // End of variables declaration//GEN-END:variables
}
